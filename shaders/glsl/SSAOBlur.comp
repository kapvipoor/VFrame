#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_GOOGLE_include_directive : enable

#include "Common.h"

layout (local_size_x = THREAD_GROUP_SIZE_X, local_size_y = THREAD_GROUP_SIZE_Y) in;
void main()
{
    ivec2 xy                    = ivec2(gl_GlobalInvocationID.xy);
    float result                = 0.0;

    float ssaoRead = 0.0;
    // get 3 by 3 neighbors and average
    for(int i = -1; i <= 1; i++)
    {
        for(int j = -1; j <= 1; j++)
        {
            ivec2 offset        = xy + ivec2(i, j);
            float sampleRead    = imageLoad(g_RT_StorageImages[STORE_SSAO_AND_BLUR], offset).x;
            if(i == 0)
            {
                if(j == 0)
                {
                    ssaoRead = sampleRead;
                }
            }
            result              = result + sampleRead;
        }
    }

    result                      = result / 9.0;
    imageStore(g_RT_StorageImages[STORE_SSAO_AND_BLUR], xy, vec4(ssaoRead, result, 0.0, 0.0));
}
