#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_GOOGLE_include_directive : enable

#include "Common.h"

layout (local_size_x = THREAD_GROUP_SIZE_X, local_size_y = THREAD_GROUP_SIZE_Y) in;
void main()
{
    ivec2 xy                    = ivec2(gl_GlobalInvocationID.xy);
    float result                = 0.0;

    // get 2 by 2 neighbours and average
    for(int i = -2; i < 2; i++)
    {
        for(int j = -2; j < 2; j++)
        {
            ivec2 offset        = xy + ivec2(i, j);
            result              = result + imageLoad(g_RT_StorageImages[STORE_SSAO], offset).x;
        }
    }

    result                      = result / 16.0;
    imageStore(g_RT_StorageImages[STORE_SSAO_BLUR], xy, vec4(result, 0.0, 0.0, 0.0));
}
